(()=>{"use strict";const e=document.querySelector("[data-lists]"),t=document.querySelector("[data-tasks]"),n=document.getElementById("task-template"),i="task.lists",d="task.selectedListId";let l=JSON.parse(localStorage.getItem(i))||[],a=localStorage.getItem(d);function s(){localStorage.setItem(i,JSON.stringify(l)),localStorage.setItem(d,a)}function o(){s(),c()}function c(){r(e),l.forEach((t=>{const n=document.createElement("div");n.classList.add("lists"),n.dataset.listId=t.id;let i=`\n        <div class="list-item">\n          <h3 class="list-text hover">${t.name}</h3>\n          <i class="fa-solid fa-minus hover fa-lg" style="color: #f8f7f9" data-delete-list-btn></i>\n        </div>\n        `;n.innerHTML=i;const d=n.querySelector(".list-text");t.id===a&&d.classList.add("current"),e.appendChild(n)}));const i=l.find((e=>e.id===a));t.style.display=null==a?"none":"",r(t),function(e){e.tasks.forEach((e=>{const i=document.importNode(n.content,!0),d=i.querySelector("input"),l=i.querySelector("p.name"),a=i.querySelector("p.description"),o=i.querySelector("p.date"),c=i.querySelector("p.priority"),r=i.querySelector(".task-item");i.querySelector(".delete-task-btn").id="btn"+e.id,r.id=e.id,d.id="chk"+e.id,d.checked=e.complete,l.innerHTML=e.name,a.innerHTML=e.description,o.innerHTML=e.date,c.innerHTML=e.priority,t.appendChild(i),d.addEventListener("change",(()=>{e.complete=d.checked,e.complete?r.classList.add("completed"):r.classList.remove("completed"),s()})),e.complete&&r.classList.add("completed")}))}(i)}function r(e){for(;e.firstChild;)e.removeChild(e.firstChild)}document.getElementById("new-list").addEventListener("click",(function(){document.getElementById("list-form").style.display="flex"})),document.getElementById("close-form").addEventListener("click",(function(){let e=document.getElementById("list-form"),t=document.getElementById("list-name");if(""===t.value)return;const n=(i=t.value,{id:Date.now().toString(),name:i,tasks:[]});var i;t.value="",l.push(n),e.style.display="none",o()})),e.addEventListener("click",(e=>{"h3"===e.target.tagName.toLowerCase()&&(a=e.target.parentNode.parentNode.dataset.listId,o())})),e.addEventListener("click",(e=>{if(e.target.hasAttribute("data-delete-list-btn")){e.target.querySelector("i");const t=e.target.parentNode.parentNode.dataset.listId;l=l.filter((e=>e.id!==t)),t===a&&(a=null),o()}})),document.getElementById("add-task").addEventListener("click",(()=>{const e=function(){const e=document.getElementById("name").value,t=document.getElementById("description").value,n=document.getElementById("date").value,i=document.getElementById("priority").value;let d=n.slice(8,10),l=n.slice(5,7),a=n.slice(0,4);l.startsWith("0")&&(l=l.substring(1)),d.startsWith("0")&&(d=d.substring(1));let s=`${l}/${d}/${a}`;if(""!==e&&""!==t&&""!==s&&""!==i)return{name:e,description:t,date:s,priority:i};document.getElementById("error-text").style.display="block"}(),t=(n=e.name,i=e.description,d=e.date,s=e.priority,{id:Date.now().toString(),name:n,description:i,date:d,priority:s,complete:!1});var n,i,d,s;l.find((e=>e.id===a)).tasks.push(t),document.getElementById("name").value="",document.getElementById("description").value="",document.getElementById("date").value="",document.getElementById("priority").value="",o()})),t.addEventListener("click",(e=>{"input"===e.target.tagName.toLowerCase()&&(l.find((e=>e.id===a)).tasks.find((t=>"chk"+t.id===e.target.id)).complete=e.target.checked,s())})),c()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,