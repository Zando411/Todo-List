(()=>{"use strict";const e=document.querySelector("[data-lists]"),t=document.querySelector("[data-tasks]"),i=document.getElementById("task-template"),n="task.lists",d="task.selectedListId";let a=JSON.parse(localStorage.getItem(n))||[{id:"ToDo",name:"Todo List",tasks:[{id:"Item1",name:"Trash",description:"Take out the trash to the curb",date:"4/24/2023",priority:"Medium",complete:!1},{id:"Item2",name:"Gas",description:"Fill up the car with gas",date:"4/23/2023",priority:"Low",complete:!0},{id:"Item3",name:"Hang out",description:"Play games and have some fun!",date:"4/29/2023",priority:"High",complete:!1}]}],s=localStorage.getItem(d)||"ToDo";function o(){localStorage.setItem(n,JSON.stringify(a)),localStorage.setItem(d,s)}function l(){o(),r()}function r(){c(e),console.log(a),a.forEach((t=>{const i=document.createElement("div");i.classList.add("lists"),i.dataset.listId=t.id;let n=`\n        <div class="list-item">\n          <h3 class="list-text hover">${t.name}</h3>\n          <i class="fa-solid fa-minus hover fa-lg" style="color: #f8f7f9" data-delete-list-btn></i>\n        </div>\n        `;i.innerHTML=n;const d=i.querySelector(".list-text");t.id===s&&d.classList.add("current"),e.appendChild(i)}));const n=a.find((e=>e.id===s));t.style.display=null==s?"none":"",c(t),function(e){e.tasks.forEach((n=>{const d=document.importNode(i.content,!0),r=d.querySelector("input"),c=d.querySelector("p.name"),m=d.querySelector("p.description"),u=d.querySelector("p.date"),p=d.querySelector("p.priority"),y=d.querySelector(".task-item"),g=d.querySelector(".delete-task-btn");g.id="btn"+n.id,y.id=n.id,r.id="chk"+n.id,r.checked=n.complete,c.innerHTML=n.name,m.innerHTML=n.description,u.innerHTML=n.date,p.innerHTML=n.priority,t.appendChild(d),r.addEventListener("change",(()=>{n.complete=r.checked,n.complete?y.classList.add("completed"):y.classList.remove("completed"),o()})),n.complete&&y.classList.add("completed"),g.addEventListener("click",(()=>{const t=a.findIndex((e=>e.id===s));e.tasks=e.tasks.filter((e=>e.id!==n.id)),a[t]=e,l()}))}))}(n)}function c(e){for(;e.firstChild;)e.removeChild(e.firstChild)}document.getElementById("new-list").addEventListener("click",(function(){document.getElementById("list-form").style.display="flex"})),document.getElementById("close-form").addEventListener("click",(function(){let e=document.getElementById("list-form"),t=document.getElementById("list-name");if(""===t.value)return;const i=(n=t.value,{id:Date.now().toString(),name:n,tasks:[]});var n;t.value="",a.push(i),e.style.display="none",l()})),e.addEventListener("click",(e=>{"h3"===e.target.tagName.toLowerCase()&&(s=e.target.parentNode.parentNode.dataset.listId,l())})),e.addEventListener("click",(e=>{if(e.target.hasAttribute("data-delete-list-btn")){e.target.querySelector("i");const t=e.target.parentNode.parentNode.dataset.listId;a=a.filter((e=>e.id!==t)),t===s&&(s=null),l()}})),document.getElementById("add-task").addEventListener("click",(()=>{const e=function(){const e=document.getElementById("name").value,t=document.getElementById("description").value,i=document.getElementById("date").value,n=document.getElementById("priority").value;let d=i.slice(8,10),a=i.slice(5,7),s=i.slice(0,4);a.startsWith("0")&&(a=a.substring(1)),d.startsWith("0")&&(d=d.substring(1));let o=`${a}/${d}/${s}`;if(""!==e&&""!==t&&""!==o&&""!==n)return{name:e,description:t,date:o,priority:n};document.getElementById("error-text").style.display="block"}(),t=(i=e.name,n=e.description,d=e.date,o=e.priority,{id:Date.now().toString(),name:i,description:n,date:d,priority:o,complete:!1});var i,n,d,o;a.find((e=>e.id===s)).tasks.push(t),document.getElementById("name").value="",document.getElementById("description").value="",document.getElementById("date").value="",document.getElementById("priority").value="",l()})),t.addEventListener("click",(e=>{"input"===e.target.tagName.toLowerCase()&&(a.find((e=>e.id===s)).tasks.find((t=>"chk"+t.id===e.target.id)).complete=e.target.checked,o())})),r()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,